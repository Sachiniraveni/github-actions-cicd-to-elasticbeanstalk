name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk 
env:
  EB_PACKAGE_S3_BUCKET_NAME : "flask-dev"
  EB_APPLICATION_NAME       : "MyFlask"
  EB_ENVIRONMENT_NAME       : "MyFlask-env"
  DEPLOY_PACKAGE_NAME       : "flask-dev-${{ github.sha }}.zip"
  AWS_REGION_NAME           : "us-east-1"
  STACK_NAME                : "my-deploymentt"

on: 
  push:
    branches:
      - main
      - dev

jobs:
  build-CI:
    name: my ci-pipeline
    runs-on: ubuntu-latest
       
    steps:
         - name: Git clone our repository
           uses: actions/checkout@v1
            
         - name: Create ZIP deployment package
           run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./  -x  *.git*
           
         - name: Configure my AWS Credentils
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
             aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
             aws-region           : ${{ env.AWS_REGION_NAME }}
         
#          - name : check if the s3 bucket exists
#            id   : check
#            run  : OUTPUT=$(aws s3api  bucket-exists --bucket ${{ env.EB_PACKAGE_S3_BUCKET_NAME }})
#        run : aws s3 ls "s3://${{ env.S3_BUCKET_NAME }}" 2>&1 | grep -q 'No such bucket'

#        runs only when the previous steps fails
         - name : Create an s3 bucket 
           run  : aws s3api create-bucket --bucket ${{ env.EB_PACKAGE_S3_BUCKET_NAME }}

#          - name : check if the s3 bucket exists
#            id   : checks
#            run  : OUTPUT=$(aws s3api wait bucket-exists --bucket ${{ env.EB_PACKAGE_S3_BUCKET_NAME }})

         - name: Copy our Deployment package to S3 bucket 
           if  :  ${{ success() }}
           run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/
         
         - name: Print nice message on completion of CI Pipeline
           if  : github.ref == 'ref/heads/dev'
           run : echo "CI Pipeline part finished successfully"
         
         - name: go baack
           run : cd ../../
           
  build-CD:
    name: my CD-pipeline
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region           : ${{ env.AWS_REGION_NAME }}
      - run : sam build
#         working-directory: github-actions-cicd-to-elasticbeanstalk
        
      - run : dir=$(ls) && echo $dir 
      
      - run: sam deploy --template-file template.yaml --capabilities CAPABILITY_IAM --s3-bucket {{ env.EB_PACKAGE_S3_BUCKET_NAME}} --stack-name ${{ env.STACK_NAME }}
#         working-directory: github-actions-cicd-to-elasticbeanstalk
       
      - name: Create new ElasticBeanstalk Applicaiton Version
        run: |
             aws elasticbeanstalk create-application-version \
             --application-name ${{ env.EB_APPLICATION_NAME }} \
             --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
             --version-label "Ver-${{ github.sha }}" \
             --description "CommitSHA-${{ github.sha }}"
      - name: Deploy our new Application Version
        run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
           
      - name: Print nice message on completion of CD Pipeline
        if  : github.ref == 'ref/heads/dev'
        run : echo "CD Pipeline part finished successfully" 
       
         
           
        
        
        
